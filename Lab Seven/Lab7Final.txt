#Question One


import random
List = [random.randrange(1, 7) for i in range(20)]
runs = []
inRun = False

run = ""

for i in range(len(List)):
    if inRun:
        if List[i] != List[i-1]:
            runs.append(run)
            
            
            run = ""
            inRun = False
            
        else:
            run += str(List[i])
            
    if inRun == False:
        if i != len(List)-1:
            if List[i] == List[i+1]:
                run += str(List[i])

                inRun = True


runs = sorted(runs, key=len)

output = ""

if (len(runs) > 0):
    output = output.join(str(x) for x in List)

    output = output.replace(runs[-1], "(" + runs[-1] + ")" , 1) 

print(output)





#Question Two


import random

N = [""]*20

for i in range(20):
    N[i] = random.randint(1,6)
    
Count = 1 
Index = -1 
Start = -1
MaxCount = 0

for i in range(1, len(N)-1):
    if N[i] == N[i-1] :
        Count=Count+1
    elif N[i] != N[i-1] :
        if MaxCount<Count:
            MaxCount = Count
            Lastindex = i=1
        count = 1
        
Startindex =Lastindex - MaxCount +1

for i in range(len(N)) :
    maxCount = count
    lastindex = i-1
count = 1

Startindex = Lastindex - MaxCount+1 

for i in range(len(N)):
    if i == Startindex:
        print("(", end ="")
        print(N[i], end ="")
        
    if i == Lastindex:
        print(N[i], end ="")
        print(")", end ="")
    
    else:
        print(N[i], end ="")





#Question Three


def longestFalse(L):
    start=0
    curStart=0
    curEnd=0
    end=0
    length=0
    while curEnd != len(L) and curEnd < len(L):
        curEnd=curStart+1
        while curEnd<len(L) and not L[curEnd]:
            curEnd=curEnd+1
        if (curEnd-curStart)>length:
            length=curEnd-curStart
            start=curStart
            end=curEnd-1
        curStart=curEnd+1
    if start == 0 and end == 0:
        for x in range(0, len(L)):
            if L[x] == False:
                return x,x
    return start,end

print(longestFalse([False,False,True,False,False,False,False,True,True,False,False]))





#Question Four


import math
def occupy(n):
    nestStr = ""
    strBool=[]
    for x in range(0,n):
        nestStr += "_"
        strBool += [False]
    print(nestStr)
        
    while not all(strBool):
        nums = longestFalse(strBool)
        mid = math.ceil((nums[1]-nums[0])/2) + nums[0]
        nestStr = replace_str(nestStr, mid, "X")
        strBool[mid] = True
        print(nestStr)
    
def longestFalse(L):
    start=0
    curStart=0
    curEnd=0
    end=0
    length=0
    while curEnd != len(L) and curEnd < len(L):
        curEnd=curStart+1
        while curEnd<len(L) and not L[curEnd]:
            curEnd=curEnd+1
        if (curEnd-curStart)>length:
            length=curEnd-curStart
            start=curStart
            end=curEnd-1
        curStart=curEnd+1
    if start == 0 and end == 0:
        for x in range(0, len(L)):
            if L[x] == False:
                return x,x
    return start,end


def replace_str(string,index=0,replacement=''):
    return '%s%s%s'%(string[:index],replacement,string[index+1:])





#Question Five


def isPal(L):
    
    R = L.copy()
    R.reverse()    
    
    if L==R:
        return True
    else:
        return False
        
        